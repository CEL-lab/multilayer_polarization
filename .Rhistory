# Load necessary packages
library(DBI)
library(RSQLite)
library(igraph)
library(multinet)
library(ggplot2)
library(ggraph)
library(devtools)
library(tidyverse)
library(RColorBrewer)
#devtools::install_github("manlius/muxViz")
library(muxViz)
install.packages("muxViz")
# Connect to the SQLite database
conn <- dbConnect(SQLite(), "../data/csvyerine.db")
getwd()
# Connect to the SQLite database
conn <- dbConnect(SQLite(), "/data/csvyerine.db")
library(DBI)
library(RSQLite)
library(igraph)
library(multinet)
library(ggplot2)
library(ggraph)
library(devtools)
library(tidyverse)
library(RColorBrewer)
#devtools::install_github("manlius/muxViz")
library(muxViz)
# Connect to the SQLite database
conn <- dbConnect(SQLite(), "/data/csvyerine.db")
# Connect to the SQLite database
conn <- dbConnect(SQLite(), "../data/csvyerine.db")
conn <- dbConnect(SQLite(), "C:\Users\ysf\Desktop\multilayer_polarization")
conn <- dbConnect(SQLite(), "C:/Users/ysf/Desktop/multilayer_polarization")
conn <- dbConnect(SQLite(), "C://Users//ysf//Desktop//multilayer_polarization")
conn <- dbConnect(SQLite(), "C:\\Users\\ysf\\Desktop\\multilayer_polarization")
setwd("C:/Users/ysf/Desktop/multilayer_polarization/analysis")
conn <- dbConnect(SQLite(), "../data/csvyerine.db")
finalTableWithAdditions <- read_csv("../data/finalTable.csv", col_types = cols(.default = "c"))
# List the tables
tables <- dbListTables(conn)
# Read the table
df <- dbReadTable(conn, "followMatrixAll")
# Read the table
df <- dbReadTable(conn, "followingMatrixAll")
View(df)
df1<-df[,-1]
View(df1)
# Remove 'x' from column names
names(df1) <- gsub("X", "", names(df1))
# Convert dataframe to matrix
df_mat <- data.matrix(df1)
rownames(df_mat) <- colnames(df_mat)
#graph from adj matrix
g_fol <- graph_from_adjacency_matrix(df_mat,"undirected")
View(g_fol)
length(t(unique(finalTableWithAdditions[1]))) # unique colors
#assign colors to parties
color <- c()
for (i in 1:length(t(unique(finalTableWithAdditions[1])))) {
if (finalTableWithAdditions[i, "party"] == "Republican") {
color <- append(color, 0)
} else {
color <- append(color, 1)
}
}
names(color) <- pull(unique(finalTableWithAdditions[,1]))
color
V(g_fol)$name
names(color)
# Initialize color vector C
C <- character(length(V(g_fol)$name))
# Iterate over V
for (i in seq_along(V(g_fol)$name)) {
name <- V(g_fol)$name[i]
matching_index <- match(name, names(color))
if (!is.na(matching_index)) {
C[i] <- color[matching_index]
} else {
C[i] <- "2"
}
}
C
V(g_fol)$name[1]
V(g_fol)$name[2]
match(V(g_fol)$name[1],names(color))
match(V(g_fol)$name[2],names(color))
color[25]
# Replace values using ifelse()
C <- ifelse(C == "1", "Dem", ifelse(C == "0", "Rep", ifelse(C == "2", "Ind", C)))
#plot with labels
V(g_fol)$labels <- C
# Get unique values from C
unique_values <- unique(C)
# Generate unique color codes based on the number of unique values
num_colors <- length(unique_values)
color_palette <- brewer.pal(num_colors, "Set3")
# Create a color vector based on the unique values in C
color_vector <- color_palette[match(C, unique_values)]
tkplot(g_fol, vertex.label=V(g_fol)$labels, vertex.color=color_vector)
source("~/Documents/GitHub/multilayer_polarization/analysis/analysis.R")
source("~/Documents/GitHub/multilayer_polarization/analysis/followAnalysis.R")
source("~/Documents/GitHub/multilayer_polarization/analysis/followAnalysis.R")
source("~/Documents/GitHub/multilayer_polarization/analysis/analysis.R")
color
df
dim(df)
#read two separate csv files
original <- read.csv("/Users/harunpirim/Downloads/hashtags_406 - raw.csv")
unsup01 <- read.csv("/Users/harunpirim/Downloads/hashtags_406 - unsup_01.csv")
original <- merge(original, unsup01, all.x=T)
View(original)
source("~/Documents/GitHub/multilayer_polarization/mergecvs.R")
View(original)
source("~/Documents/GitHub/multilayer_polarization/mergecvs.R")
View(original)
#read two separate csv files
original <- read.csv("/Users/harunpirim/Downloads/hashtags_406 - raw.csv")
unsup01 <- read.csv("/Users/harunpirim/Downloads/hashtags_406 - unsup_01.csv")
original <- merge(original, unsup01, all.x=T)
View(original)
source("~/Documents/GitHub/multilayer_polarization/mergecvs.R")
source("~/Documents/GitHub/multilayer_polarization/mergecvs.R")
source("~/Documents/GitHub/multilayer_polarization/mergecvs.R")
View(original)
source("~/Documents/GitHub/multilayer_polarization/mergecvs.R")
View(original)
#read two separate csv files
original <- read.csv("/Users/harunpirim/Downloads/hashtags_406 - raw.csv")
unsup01 <- read.csv("/Users/harunpirim/Downloads/hashtags_406 - unsup_01.csv")
original <- merge(original, unsup01, all.x=T)
View(original)
#read separate csv files
original <- read.csv("/Users/harunpirim/Downloads/hashtags_406 - raw.csv")
unsup01 <- read.csv("/Users/harunpirim/Downloads/hashtags_406 - unsup_01.csv")
unsup03 <- read.csv("/Users/harunpirim/Downloads/hashtags_406 - unsup_03.csv")
unsup04 <- read.csv("/Users/harunpirim/Downloads/hashtags_406 - unsup_04.csv")
unsup05 <- read.csv("/Users/harunpirim/Downloads/hashtags_406 - unsup_05.csv")
unsup_01 <- read.csv("/Users/harunpirim/Downloads/hashtags_375 - unsup_01.csv")
unsup_02 <- read.csv("/Users/harunpirim/Downloads/hashtags_375 - unsup_02.csv")
unsup_03 <- read.csv("/Users/harunpirim/Downloads/hashtags_375 - unsup_03.csv")
unsup_04 <- read.csv("/Users/harunpirim/Downloads/hashtags_375 - unsup_04.csv")
unsup_05 <- read.csv("/Users/harunpirim/Downloads/hashtags_375 - unsup_05.csv")
# vector of read files
prompts <- c('unsup01', 'unsup03', 'unsup04', "unsup05", "unsup_01","unsup_02", "unsup_03", "unsup_04","unsup_05")
# merge all of files
for(i in 1:length(prompts)){
original <- merge(orgininal, prompts[i])
}
for(i in 1:length(prompts)){
original <- merge(original, prompts[i])
}
View(original)
for(i in 1:length(prompts)){
original <- merge(original, get(prompts[i]))
}
prompts[1]
#read separate csv files
original <- read.csv("/Users/harunpirim/Downloads/hashtags_406 - raw.csv")
unsup01 <- read.csv("/Users/harunpirim/Downloads/hashtags_406 - unsup_01.csv")
unsup03 <- read.csv("/Users/harunpirim/Downloads/hashtags_406 - unsup_03.csv")
unsup04 <- read.csv("/Users/harunpirim/Downloads/hashtags_406 - unsup_04.csv")
unsup05 <- read.csv("/Users/harunpirim/Downloads/hashtags_406 - unsup_05.csv")
unsup_01 <- read.csv("/Users/harunpirim/Downloads/hashtags_375 - unsup_01.csv")
unsup_02 <- read.csv("/Users/harunpirim/Downloads/hashtags_375 - unsup_02.csv")
unsup_03 <- read.csv("/Users/harunpirim/Downloads/hashtags_375 - unsup_03.csv")
unsup_04 <- read.csv("/Users/harunpirim/Downloads/hashtags_375 - unsup_04.csv")
unsup_05 <- read.csv("/Users/harunpirim/Downloads/hashtags_375 - unsup_05.csv")
# vector of read files
prompts <- c('unsup01', 'unsup03', 'unsup04', "unsup05", "unsup_01","unsup_02", "unsup_03", "unsup_04","unsup_05")
# merge all of files
for(i in 1:length(prompts)){
original <- merge(original, get(prompts[i]))
}
View(original)
#read separate csv files
original <- read.csv("/Users/harunpirim/Downloads/hashtags_406 - raw.csv")
unsup01 <- read.csv("/Users/harunpirim/Downloads/hashtags_406 - unsup_01.csv")
unsup03 <- read.csv("/Users/harunpirim/Downloads/hashtags_406 - unsup_03.csv")
unsup04 <- read.csv("/Users/harunpirim/Downloads/hashtags_406 - unsup_04.csv")
unsup05 <- read.csv("/Users/harunpirim/Downloads/hashtags_406 - unsup_05.csv")
unsup_01 <- read.csv("/Users/harunpirim/Downloads/hashtags_375 - unsup_01.csv")
unsup_02 <- read.csv("/Users/harunpirim/Downloads/hashtags_375 - unsup_02.csv")
unsup_03 <- read.csv("/Users/harunpirim/Downloads/hashtags_375 - unsup_03.csv")
unsup_04 <- read.csv("/Users/harunpirim/Downloads/hashtags_375 - unsup_04.csv")
unsup_05 <- read.csv("/Users/harunpirim/Downloads/hashtags_375 - unsup_05.csv")
# vector of read files
prompts <- c('unsup01', 'unsup03', 'unsup04', "unsup05", "unsup_01","unsup_02", "unsup_03", "unsup_04","unsup_05")
# merge all of files
for(i in 1:length(prompts)){
original <- merge(original, get(prompts[i]), all.x = T)
}
View(original)
write.csv(original, "all_prompts.csv")
library(tidyverse)
original %>% select(-frequency,-unique_users,-Note,-unsup_05_note) -> sub_original
rowSums(sub_original,na.rm = T)
df <- sub_original
df$categories_count <- apply(df, 1, function(x) sum(is.factor(x) | is.character(x)))
View(df)
# Assuming df is your dataframe
num_non_na <- apply(df, 1, function(x) sum(!is.na(x)))
View(df)
# Assuming df is your dataframe
df$categories_count <- apply(df, 1, function(x) sum(!is.na(x)))
View(df)
df <- sub_original %>%
mutate(total = rowSums(!is.na(across(starts_with("unsup")))))
head(df)
df
write.csv(df, "all_prompts.csv")
source("~/Documents/GitHub/multilayer_polarization/mergecvs.R")
source("~/Documents/GitHub/multilayer_polarization/mergecvs.R")
source("~/Documents/GitHub/multilayer_polarization/mergecvs.R")
